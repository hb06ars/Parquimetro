version: '3.8'

services:
  zookeeper:
    image: zookeeper:3.4.9
    hostname: zookeeper
    networks:
      - broker-parquimetro
    ports:
      - "2181:2181"
    environment:
      ZOO_MY_ID: 1
      ZOO_PORT: 2181
      ZOO_SERVERS: server.1=zookeeper:2888:3888
    volumes:
      - ./data/zookeeper/data:/data
      - ./data/zookeeper/datalog:/datalog

  kafka1:
    image: confluentinc/cp-kafka:5.3.0
    hostname: kafka1
    networks:
      - broker-parquimetro
    ports:
      - "9092:9092"
    environment:
      KAFKA_ADVERTISED_LISTENERS: LISTENER_DOCKER_INTERNAL://kafka1:19092,LISTENER_DOCKER_EXTERNAL://${DOCKER_HOST_IP:-127.0.0.1}:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: LISTENER_DOCKER_INTERNAL:PLAINTEXT,LISTENER_DOCKER_EXTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: LISTENER_DOCKER_INTERNAL
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
      KAFKA_BROKER_ID: 1
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    volumes:
      - ./data/kafka1/data:/var/lib/kafka/data
    depends_on:
      - zookeeper

  kafdrop:
    image: obsidiandynamics/kafdrop
    restart: "no"
    networks:
      - broker-parquimetro
    ports:
      - "9000:9000"
    environment:
      KAFKA_BROKERCONNECT: "kafka1:19092"
    depends_on:
      - kafka1

  redis:
    image: redis:6.2
    container_name: redis
    networks:
      - broker-parquimetro
    ports:
      - "6379:6379"
    volumes:
      - ./data/redis:/data
    command: [ "redis-server", "--appendonly", "yes" ]

  mongodb:
    image: mongo:4.4
    container_name: mongodb
    networks:
      - broker-parquimetro
    environment:
      MONGO_INITDB_DATABASE: parquimetrodb
      MONGO_INITDB_ROOT_USERNAME: parquimetrousr
      MONGO_INITDB_ROOT_PASSWORD: Parquimetro@2024
    ports:
      - "27017:27017"
    volumes:
      - ./data/mongodb:/data/db


networks:
  broker-parquimetro:
    driver: bridge
